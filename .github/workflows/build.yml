name: .NET 9.0 Build (x64|ARM64) and Unit Tests (x64)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    #env:
    #  Solution_Name: EM.Hasher.sln                                                 # Replace with your solution name, i.e. MyWpfApp.sln.
    #  Test_Project_Path: src\EM.Hasher.Tests\EM.Hasher.Tests.csproj                # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
    #  Wap_Project_Directory: src\EM.Hasher (Package)                               # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
    #  Wap_Project_Path: src\EM.Hasher (Package)\EM.Hasher (Package).wapproj        # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Install .NET 9
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 9.0.x
        
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Build (x64)
      working-directory: src/EM.Hasher
      run: |
           msbuild EM.Hasher.csproj /restore /m /p:configuration="Release" /p:platform="x64" -p:PublishReadyToRun=false

    - name: Build (ARM64)
      working-directory: src/EM.Hasher
      run: |
           msbuild EM.Hasher.csproj /restore /m /p:configuration="Release" /p:platform="ARM64" -p:PublishReadyToRun=false

    - name: Build unit tests project (x64)
      working-directory: src/EM.Hasher.Tests
      run: |
           msbuild EM.Hasher.Tests.csproj /restore /m /p:configuration="Debug" /p:platform="x64" -p:PublishReadyToRun=false           
    
    # The Unit test Appx must now be Registered in order to run the unit tests (post WinAppSDK 1.8)
    - name: Install the Windows App SDK Runtime (x64) via winget
      run: |
        winget install --id Microsoft.WindowsAppRuntime.1.8 --accept-package-agreements --accept-source-agreements

    - name: Register the EM.Hasher.Tests Appx
      working-directory: src/EM.Hasher.Tests/bin/x64/Debug/net9.0-windows10.0.22621.0
      shell: powershell
      run: |
        Add-AppxPackage -Register AppxManifest.xml -ForceUpdateFromAnyVersion

    - name: Run unit tests (x64)
      working-directory: src/EM.Hasher.Tests/bin/x64/Debug/net9.0-windows10.0.22621.0
      shell: powershell
      continue-on-error: true
      run: |
        $packageName = "*EM.Hasher.Tests*"
        $pkg = Get-AppxPackage -ErrorAction SilentlyContinue | Where-Object { $_.InstallLocation -like $packageName }
        if (-not $pkg) {
            Write-Error "Package $packageName not found. Did you run Add-AppxPackage?"
            exit 1
        }
        $familyName = $pkg.PackageFamilyName
        Write-Host "Launching $familyName with --run"
        Start-Process "shell:AppsFolder\$familyName!App" -ArgumentList "--run"
        if ($pkg) {
            Write-Host "Uninstalling $familyName"
            Remove-AppxPackage -Package $pkg.PackageFullName
        } else {
            Write-Warning "Package $packageName not found during cleanup."
        }
    #
    
    # The TestResults.txt should be located in the Appx folder after running the tests
    - name: Run unit tests (x64) - Display results
      working-directory: src/EM.Hasher.Tests/bin/x64/Debug/net9.0-windows10.0.22621.0
      shell: cmd
      continue-on-error: true
      run: |
        if not exist TestResults.txt echo TestResults.txt not found
        if not exist TestResults.txt dir
        if exist TestResults.txt type TestResults.txt

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build Artifacts
        retention-days: 1
        path: |
            src/EM.Hasher/bin
            src/EM.Hasher.Tests/bin
